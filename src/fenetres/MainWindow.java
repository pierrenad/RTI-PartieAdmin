/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fenetres;

import java.awt.event.KeyEvent;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.Socket;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import network.Network;

/**
 *
 * @author Pierre
 */
public class MainWindow extends javax.swing.JFrame {

    Socket sock = null;
    DataOutputStream dos = null;
    DataInputStream dis = null;
    
    private Socket sockC = null;
    private DataOutputStream dosC = null;
    private DataInputStream disC = null;
    
    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
        
        LogPane.setVisible(true);
        JavaPane.setVisible(false);
        CPane.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LogPane = new javax.swing.JLayeredPane();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        logTxt = new javax.swing.JTextField();
        pwdTxt = new javax.swing.JTextField();
        ValiderButtonLog = new javax.swing.JButton();
        AnnulerButtonLog = new javax.swing.JButton();
        combo = new javax.swing.JComboBox<>();
        JavaPane = new javax.swing.JLayeredPane();
        SuspendContinueButton = new javax.swing.JButton();
        StopButton = new javax.swing.JButton();
        QuitButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TextArea = new javax.swing.JTextArea();
        ListButton = new javax.swing.JButton();
        CPane = new javax.swing.JLayeredPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setText("Login");

        jLabel2.setText("User : ");

        jLabel3.setText("Password");

        logTxt.setText("admin");
        logTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                logTxtKeyPressed(evt);
            }
        });

        pwdTxt.setText("admin");
        pwdTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                pwdTxtKeyPressed(evt);
            }
        });

        ValiderButtonLog.setText("Valider");
        ValiderButtonLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ValiderButtonLogActionPerformed(evt);
            }
        });

        AnnulerButtonLog.setText("Annuler");
        AnnulerButtonLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnnulerButtonLogActionPerformed(evt);
            }
        });

        combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Java", "C" }));

        LogPane.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        LogPane.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        LogPane.setLayer(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        LogPane.setLayer(logTxt, javax.swing.JLayeredPane.DEFAULT_LAYER);
        LogPane.setLayer(pwdTxt, javax.swing.JLayeredPane.DEFAULT_LAYER);
        LogPane.setLayer(ValiderButtonLog, javax.swing.JLayeredPane.DEFAULT_LAYER);
        LogPane.setLayer(AnnulerButtonLog, javax.swing.JLayeredPane.DEFAULT_LAYER);
        LogPane.setLayer(combo, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout LogPaneLayout = new javax.swing.GroupLayout(LogPane);
        LogPane.setLayout(LogPaneLayout);
        LogPaneLayout.setHorizontalGroup(
            LogPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LogPaneLayout.createSequentialGroup()
                .addContainerGap(85, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(85, 85, 85))
            .addGroup(LogPaneLayout.createSequentialGroup()
                .addGroup(LogPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(LogPaneLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(LogPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(LogPaneLayout.createSequentialGroup()
                                .addGroup(LogPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(LogPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(pwdTxt)
                                    .addComponent(logTxt)))
                            .addGroup(LogPaneLayout.createSequentialGroup()
                                .addComponent(ValiderButtonLog)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(AnnulerButtonLog))))
                    .addGroup(LogPaneLayout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(combo, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        LogPaneLayout.setVerticalGroup(
            LogPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LogPaneLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(LogPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(logTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(LogPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(pwdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(LogPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ValiderButtonLog)
                    .addComponent(AnnulerButtonLog))
                .addGap(25, 25, 25))
        );

        SuspendContinueButton.setText("Suspend");
        SuspendContinueButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SuspendContinueButtonActionPerformed(evt);
            }
        });

        StopButton.setText("Shutdown");
        StopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StopButtonActionPerformed(evt);
            }
        });

        QuitButton.setText("Quit");
        QuitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuitButtonActionPerformed(evt);
            }
        });

        TextArea.setColumns(20);
        TextArea.setRows(5);
        TextArea.setEnabled(false);
        jScrollPane1.setViewportView(TextArea);

        ListButton.setText("List");
        ListButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ListButtonActionPerformed(evt);
            }
        });

        JavaPane.setLayer(SuspendContinueButton, javax.swing.JLayeredPane.DEFAULT_LAYER);
        JavaPane.setLayer(StopButton, javax.swing.JLayeredPane.DEFAULT_LAYER);
        JavaPane.setLayer(QuitButton, javax.swing.JLayeredPane.DEFAULT_LAYER);
        JavaPane.setLayer(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        JavaPane.setLayer(ListButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout JavaPaneLayout = new javax.swing.GroupLayout(JavaPane);
        JavaPane.setLayout(JavaPaneLayout);
        JavaPaneLayout.setHorizontalGroup(
            JavaPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JavaPaneLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(JavaPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(StopButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SuspendContinueButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(QuitButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ListButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)
                .addContainerGap())
        );
        JavaPaneLayout.setVerticalGroup(
            JavaPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JavaPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JavaPaneLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ListButton)
                .addGap(18, 18, 18)
                .addComponent(SuspendContinueButton)
                .addGap(18, 18, 18)
                .addComponent(StopButton)
                .addGap(18, 18, 18)
                .addComponent(QuitButton)
                .addGap(14, 14, 14))
        );

        javax.swing.GroupLayout CPaneLayout = new javax.swing.GroupLayout(CPane);
        CPane.setLayout(CPaneLayout);
        CPaneLayout.setHorizontalGroup(
            CPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        CPaneLayout.setVerticalGroup(
            CPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(LogPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(JavaPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(CPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(LogPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(JavaPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(CPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ValiderButtonLogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ValiderButtonLogActionPerformed
        if(combo.getSelectedIndex() == 0) {
            String mess = "LOGIN#"+logTxt.getText()+"@"+pwdTxt.getText()+"@";

            try {
                System.out.println("LOGIN");
                Network n = new Network();
                sock = n.InitAdmin();

                dos = new DataOutputStream(sock.getOutputStream());
                dis = new DataInputStream(sock.getInputStream()); 

                dos.write(mess.getBytes());
                System.out.println("Message envoyé");

                byte [] mb = new byte[100];
                dis.read(mb);
                System.out.println("Reponse du serveur");

                String messRec = new String (mb);
                System.out.println(messRec);

                StringTokenizer st = new StringTokenizer(messRec, "#");
                String rep = st.nextToken();

                if(rep.equals("Y")) {
                    if(combo.getSelectedItem().toString().equals("Java")) {
                        JavaPane.setVisible(true);
                        LogPane.setVisible(false);
                    }
                    else {
                        CPane.setVisible(true);
                        LogPane.setVisible(false);
                    }
                }
                else if(rep.equals("N")) {
                    JOptionPane.showMessageDialog(this, "Incorrect login / password", "Error !", JOptionPane.ERROR_MESSAGE);
                }
            }
            catch(Exception e) {
                JOptionPane.showMessageDialog(this, "Incorrect login / password", "Error !", JOptionPane.ERROR_MESSAGE);
            }
        }
        else {
            String mess = "1#login#mdp#";

            try {
                System.out.println("LOGIN CLIENT");
                System.out.println("Serveur c");
                Network n = new Network();
                sockC = n.InitAdmin();
                System.out.println("Adminsock : " + sockC.getInetAddress() + "  " + sockC.getLocalPort());
                
                dos = new DataOutputStream(sockC.getOutputStream());
                dis = new DataInputStream(sockC.getInputStream()); 

                //dos.write(mess.getBytes());
                dos.write("1\0".getBytes()); //LOGIN
                System.out.println("Message envoyé");                
               
                byte [] mb = new byte[100];
                dis.read(mb);
                System.out.println("Reponse du serveur");

                String messRec = new String (mb);
                System.out.println(messRec);
                
                StringTokenizer st = new StringTokenizer(messRec, "#");
                String rep = st.nextToken();

                if(rep.equals("Y")) {
                    if(combo.getSelectedItem().toString().equals("Java")) {
                        JavaPane.setVisible(true);
                        LogPane.setVisible(false);
                    }
                    else {
                        CPane.setVisible(true);
                        LogPane.setVisible(false);
                    }
                }
                else if(rep.equals("N")) {
                    JOptionPane.showMessageDialog(this, "Incorrect login / password", "Error !", JOptionPane.ERROR_MESSAGE);
                }
            }
            catch(Exception e) {
                JOptionPane.showMessageDialog(this, "Incorrect login / password", "Error !", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_ValiderButtonLogActionPerformed

    private void AnnulerButtonLogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnnulerButtonLogActionPerformed
        this.dispose();
    }//GEN-LAST:event_AnnulerButtonLogActionPerformed

    private void logTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_logTxtKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER)
            ValiderButtonLogActionPerformed(null); 
    }//GEN-LAST:event_logTxtKeyPressed

    private void pwdTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pwdTxtKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER)
            ValiderButtonLogActionPerformed(null); 
    }//GEN-LAST:event_pwdTxtKeyPressed

    private void SuspendContinueButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SuspendContinueButtonActionPerformed
        String chargeUt = "SUSPEND#tara";
        try {
            dos.write(chargeUt.getBytes());
        } catch (Exception ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_SuspendContinueButtonActionPerformed

    private void StopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StopButtonActionPerformed
        String chargeUt = "SHUTDOWN#toyo";
        try {
            dos.write(chargeUt.getBytes());
            byte [] mb = new byte[100];
            dis.read(mb);
            System.out.println("Reponse du serveur");
            
            String messRec = new String (mb);
            System.out.println(messRec);
            
            StringTokenizer st = new StringTokenizer(messRec, "#");
            String rep = st.nextToken();
            
            System.out.println("Rep");
        } catch (Exception ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_StopButtonActionPerformed

    private void QuitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuitButtonActionPerformed
        JavaPane.setVisible(false);
        LogPane.setVisible(true);
    }//GEN-LAST:event_QuitButtonActionPerformed

    private void ListButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ListButtonActionPerformed
        String chargeUt = "LIST#LISTCLIENT";
        try {
            dos.write(chargeUt.getBytes());
            byte [] mb = new byte[100];
            dis.read(mb);
            System.out.println("Reponse du serveur");
            
            String messRec = new String (mb);
            System.out.println(messRec);
            
            StringTokenizer st = new StringTokenizer(messRec, "#");
            String rep = st.nextToken();
            
            TextArea.setText(rep);
        } catch (IOException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ListButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AnnulerButtonLog;
    private javax.swing.JLayeredPane CPane;
    private javax.swing.JLayeredPane JavaPane;
    private javax.swing.JButton ListButton;
    private javax.swing.JLayeredPane LogPane;
    private javax.swing.JButton QuitButton;
    private javax.swing.JButton StopButton;
    private javax.swing.JButton SuspendContinueButton;
    private javax.swing.JTextArea TextArea;
    private javax.swing.JButton ValiderButtonLog;
    private javax.swing.JComboBox<String> combo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField logTxt;
    private javax.swing.JTextField pwdTxt;
    // End of variables declaration//GEN-END:variables
}
